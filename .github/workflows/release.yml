name: release-on-main

on:
  workflow_run:
    workflows: ["CI"]
    types:
      - completed

permissions:
  contents: write

jobs:
  release:
    if: ${{ github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.head_branch == 'main' }}
    runs-on: macos-latest
    permissions:
      contents: write
      id-token: write
    environment: release
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.workflow_run.head_sha }}

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          registry-url: 'https://registry.npmjs.org'

      - name: Install deps
        run: npm ci

      - name: Compute version
        id: version
        run: |
          node scripts/compute-version.js > .version
          { echo "value=$(cat .version)"; } >> "$GITHUB_OUTPUT"

      - name: Set package.json version (no git tag)
        run: npm version "${{ steps.version.outputs.value }}" --no-git-tag-version

      - name: Build (prepack enforces on publish too)
        run: npm run build

      - name: Pack tarball (dry-run)
        run: npm pack --dry-run

      - name: Validate NPM token (optional)
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          if [ -z "${NPM_TOKEN:-}" ]; then
            echo "No NPM_TOKEN present; skipping token validation."
            exit 0
          fi
          # Print a masked preview similar to npm UI (prefix and suffix only)
          LEN=${#NPM_TOKEN}
          if [ "$LEN" -ge 12 ]; then
            PREFIX=${NPM_TOKEN:0:8}
            SUFFIX=${NPM_TOKEN:$((LEN-4))}
            echo "Detected NPM_TOKEN: ${PREFIX}......${SUFFIX}"
          else
            echo "Detected NPM_TOKEN: (masked)"
          fi
          printf '//registry.npmjs.org/:_authToken=%s\n' "$NPM_TOKEN" > ~/.npmrc
          npm ping --registry=https://registry.npmjs.org
          USERNAME=$(npm whoami)
          npm owner ls bktide | grep -F "$USERNAME"
          rm -f ~/.npmrc

      - name: Smoke install test (local)
        run: |
          TARBALL=$(npm pack | tail -n1)
          mkdir -p /tmp/bktide-verify && cd /tmp/bktide-verify && npm init -y > /dev/null 2>&1
          npm install "$GITHUB_WORKSPACE/$TARBALL"
          ./node_modules/.bin/bktide --help >/dev/null
          ./node_modules/.bin/bktide --version | grep -q "${{ steps.version.outputs.value }}"
        shell: bash

      - name: Publish to npm (trusted publishing with provenance)
        run: npm publish --provenance --access public

      - name: Build and package
        env:
          BKTIDE_VERSION: ${{ steps.version.outputs.value }}
        run: |
          npm run package

      - name: Generate changelog body
        id: changelog
        shell: bash
        run: |
          LAST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || true)
          if [ -n "$LAST_TAG" ]; then
            BODY=$(git log --pretty=format:'- %s' "$LAST_TAG"..HEAD)
          else
            BODY=$(git log --pretty=format:'- %s')
          fi
          # Fallback if empty
          if [ -z "$BODY" ]; then BODY="Automated release"; fi
          { echo "body<<EOF"; echo "$BODY"; echo "EOF"; } >> "$GITHUB_OUTPUT"

      - name: Create and push tag
        run: |
          VERSION=${{ steps.version.outputs.value }}
          git config user.name "github-actions"
          git config user.email "github-actions@users.noreply.github.com"
          git tag -a "v$VERSION" -m "Release v$VERSION"
          git push origin "v$VERSION"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.version.outputs.value }}
          prerelease: false
          files: |
            pkg/*.alfredworkflow
            pkg/*.sha256
          body: ${{ steps.changelog.outputs.body }}
